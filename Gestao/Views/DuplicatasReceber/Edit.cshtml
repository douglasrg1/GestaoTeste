@model Gestao.Models.DuplicatasReceber

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formDuplicataReceber" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.numeroDuplicata)
                <div>
                    @Html.EditorFor(model => model.numeroDuplicata, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numeroDuplicata, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.idCliente, "Cliente")
                <div class="">
                    @Html.DropDownList("idCliente", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idCliente, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.dataHemissao)
                <div class="">
                    @Html.EditorFor(model => model.dataHemissao, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.dataHemissao, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.dataVencimento)
                <div>
                    @Html.EditorFor(model => model.dataVencimento, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.dataVencimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.dataPagamento)
                <div>
                    @Html.EditorFor(model => model.dataPagamento, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.dataPagamento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.valorDuplicata)
                <div>
                    @Html.EditorFor(model => model.valorDuplicata, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.valorDuplicata, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.valorDesconto)
                <div>
                    @Html.EditorFor(model => model.valorDesconto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.valorDesconto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.valorPago)
                <div>
                    @Html.EditorFor(model => model.valorPago, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.valorPago, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.valorDevedor)
                <div>
                    @Html.EditorFor(model => model.valorDevedor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.valorDevedor, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.valorMulta)
                <div>
                    @Html.EditorFor(model => model.valorMulta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.valorMulta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.valorJurosPorDia)
                <div>
                    @Html.EditorFor(model => model.valorJurosPorDia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.valorJurosPorDia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.observacao)
                <div>
                    @Html.EditorFor(model => model.observacao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.observacao, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.statusDuplicata)
                <div>
                    @Html.DropDownListFor(model => model.statusDuplicata, (IList<SelectListItem>)ViewBag.statusDuplicata, "Selecione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.statusDuplicata, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>


        <div class="form-group">
            <div>
                <input id="salvar" type="submit" value="Salvar" class="btn btn-default" />|
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {
            removePontoDecimal();
            preencheCamposIniciais();
            $("#valorDuplicata").change(calculaValorDevedor);
            $("#valorDesconto").change(calculaValorDevedor);
            $("#valorPago").change(calculaValorDevedor);
        });

        function removePontoDecimal() {
            $("#valorDuplicata").keyup(function () {
                var valor = $(this).val();
                $(this).val(valor.replace(".", ""));
            });

            $("#valorDesconto").keyup(function () {
                var valor = $(this).val();
                $(this).val(valor.replace(".", ""));
            });

            $("#valorPago").keyup(function () {
                var valor = $(this).val();
                $(this).val(valor.replace(".", ""));
            });

            $("#valorDevedor").keyup(function () {
                var valor = $(this).val();
                $(this).val(valor.replace(".", ""));
            });

            $("#valorMulta").keyup(function () {
                var valor = $(this).val();
                $(this).val(valor.replace(".", ""));
            });

            $("#valorJurosPorDia").keyup(function () {
                var valor = $(this).val();
                $(this).val(valor.replace(".", ""));
            });


        }
        function calculaValorDevedor() {
            var valorDuplicata = $("#valorDuplicata").val() == "" ? 0 : Number($("#valorDuplicata").val().replace(",","."));
            var valorDesconto = $("#valorDesconteo").val() == "" ? 0 : Number($("#valorDesconto").val().replace(",", "."));
            var valorPago = $("#valorPago").val() == "" ? 0 : Number($("#valorPago").val().replace(",", "."));
            var valorDevedor = Number((valorDuplicata - valorPago - valorDesconto).toFixed(2));

            $("#valorDevedor").val(valorDevedor.toString() == 0 ? "" : valorDevedor.toString().replace(".", ","));
        }
        function preencheCamposIniciais() {

            $("#statusDuplicata").val("@Model.statusDuplicata");

            if ("@ViewBag.datpag" != "")
               $("#dataPagamento").val(convertData("@ViewBag.datpag"));

            $("#dataHemissao").val(convertData("@Model.dataHemissao.ToString("yyyy/MM/dd")"));
            $("#dataVencimento").val(convertData("@Model.dataVencimento.ToString("yyyy/MM/dd")"));
        }
        function convertData(data) {
            var dados = data.split("/");

            if (dados[1].lenght == 1)
                dados[1] = "0" + dados[1].lenght;

            if (dados[2].lenght == 1)
                dados[2] = "0" + dados[2].lenght;

            return dados[0] + "-" + dados[1] + "-" + dados[2];
        }

       var mensagem = "@TempData["msgerro"]";

        if (mensagem != null && mensagem != "") {
            toastr.error(mensagem);

        }
    </script>
}