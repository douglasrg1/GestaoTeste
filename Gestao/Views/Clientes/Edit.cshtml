@model Gestao.Models.Cliente

@{
    ViewBag.Title = "Edit";
}

<h2>Editar dados do cliente</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Nome)
            <div>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.TipoCliente)
            <div>
                @Html.DropDownListFor(model => model.TipoCliente, (IList<SelectListItem>)ViewBag.tipoPessoa, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <label for="CnpjCpf" id="labelCnpjCpf">CPF</label>
            <div>
                @Html.EditorFor(model => model.CnpjCpf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CnpjCpf, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Rua)
            <div>
                @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Numero)
            <div>
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Bairro)
            <div>
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Telefone1)
            <div>
                @Html.EditorFor(model => model.Telefone1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Telefone2)
            <div>
                @Html.EditorFor(model => model.Telefone2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Email)
            <div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Estado)
            <div>
                @Html.DropDownListFor(model => model.Estado, (IList<SelectListItem>)ViewBag.ufs, "Selecione...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.cidade)
            <div>
                @Html.DropDownListFor(model => model.cidade, (IList<SelectListItem>)ViewBag.Cidades, "Selecione...", new { @class = "form-control", @id = "cidades" })
                @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="row hidden">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.DataCadastro)
            <div>
                @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.DataUtimaCompra)
            <div>
                @Html.EditorFor(model => model.DataUtimaCompra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataUtimaCompra, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div>
            <input type="submit" value="Salvar " class="btn btn-success" /> |
            @Html.ActionLink("Voltar ", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#Estado").change(function () {
                buscarcidades($(this).val())
            })

            iniciarComCpfOuCnpj();

            $("#TipoCliente").change(function () {
                var tipocliente = $(this).val();
                var text = $("#labelCnpjCpf").text();
                if (tipocliente == "físico")
                    $("#labelCnpjCpf").text("CPF");
                else
                    $("#labelCnpjCpf").text("CNPJ");
            })
        })

        function buscarcidades(sigla) {
            $.getJSON("@Url.Action("Listarcidades")/?siglauf=" + sigla, populaCidades)
        }

        function populaCidades(json) {

            var dados = json;

            $("#cidades").empty();

            $(json).each(function (index,element) {
                $("#cidades").append($('<option/>', {
                    value: element.Value,
                    text: element.Text
                }));
            })
        }

        function iniciarComCpfOuCnpj() {
            var tipocliente = $("#TipoCliente").val();
            if (tipocliente == "físico")
                $("#labelCnpjCpf").text("CPF");
            else
                $("#labelCnpjCpf").text("CNPJ");
        }
    </script>
}
